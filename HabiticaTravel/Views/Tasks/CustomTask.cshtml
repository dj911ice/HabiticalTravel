@model HabiticaTravel.Models.TaskAndItems

@section Styles
{
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.css" integrity="sha256-0grYPCio07OSu/k+zNx703Nw3kv/pWbM1L0yFzULpHY=" crossorigin="anonymous" />
}

@{
    /**/

    /**/

    ViewBag.Title = "Custom Task";
    Layout = "~/Views/Shared/_Layout.cshtml";


    // In a real system we would get this list from the database

    SelectList Difficulty = new SelectList(
   new List<SelectListItem>
   {
new SelectListItem { Value = "...", Text = "...please select item"},
new SelectListItem { Value = "0.1", Text = "Trivial"},
new SelectListItem { Value = "1", Text = "Easy"},
new SelectListItem { Value = "1.5", Text = "Medium"},
new SelectListItem { Value = "2", Text = "Hard"},
   }, "Value", "Text");

}


<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("AddCustomTask", "Tasks", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @*@//This is client side validation.*@

    @Html.AntiForgeryToken()
    <h4>Fill out this form.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @Html.HiddenFor(ti => ti.CustomTask.TaskTag, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(ti => ti.CustomTask.TaskType, new { htmlAttributes = new { @class = "form-control" } })

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.TaskName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(ti => ti.CustomTask.TaskName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.TaskDueDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(ti => ti.CustomTask.TaskDueDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.TaskNotes, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(ti => ti.CustomTask.TaskNotes,  new { @class = "form-control textFix", placeholder = "Task Notes", style = "color:black;" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.TaskDifficulty, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(ti => ti.CustomTask.TaskDifficulty, Difficulty, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.ReminderStartDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(ti => ti.CustomTask.ReminderStartDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTask.ReminderTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(ti => ti.CustomTask.ReminderTime, new { data_val = false, @class = "form-control timepicker", placeholder = "hh:mm p" } )
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(ti => ti.CustomTaskItem, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <ul id="TaskList"></ul>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create Task" />
        </div>
    </div>
}

<button class="btn-success" id="addTaskHandler">Add Checklist Item</button>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.js" integrity="sha256-rARD3YWpNcb9KRh9KNIxD8rKkti6DKRjxlJ/vS67pOg=" crossorigin="anonymous"></script>
    <script>
        $('.timepicker').timepicker({
            timeFormat: 'h:mm p',
            interval: 60,
            minTime: '8',
            maxTime: '11:00pm',
            defaultTime: '11',
            startTime: '10:00',
            dynamic: false,
            dropdown: false,
            scrollbar: true
        });
    </script>
}

